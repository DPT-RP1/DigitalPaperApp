{
  "swagger": "2.0",
  "info": {
    "version": "0.6.0",
    "title": "Polaris 2.0 Digital Paper Control Interface",
    "description": "Released on April 11th, 2017.<br>\n[Instruction](http://kiwi.dps.sony.co.jp/drbd/polaris/trac/wiki/Team/Server/DpcifInstruction)<br>\n[Change log](http://kiwi.dps.sony.co.jp/drbd/polaris/trac/browser/Teams/Server/_Polaris20/Documents/deneb_swagger/change_log.txt)<br>"
  },
  "paths": {
    "/documents": {
      "get": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** ★ Obsoleted use deprecated ★ ** __ * n ** Get document list ** \n * entry_type Filter by item type \n * All (folder + document 'notes' \n * search_target Target of keyword search or identifier specification \n * Document meta information (name, title, author): 'all' \n * Document: 'documents' 'annotation_pattern' \n * annotation_type Filter by type annotation type \n <small> * search ('*') * 'document_body' \n * Document body: 'document_body' </small> \n * All (highlight + handwritten): 'all' \n * Highlights: 'highlights' \n * Handwriting: 'handwritings' \n * order_type Specify sort order in list \n <small> * </small> \n * Name - Ascending order: 'entry_name_asc' \n * Name - The folder is grouped first in ascending order, the folders are grouped first in descending order, 'Modified_date_desc' \n * Created date and time - Ascending order: 'created_date_asc' \n * Created date and time - Descending order: 'created_date_desc' \n * Edit date and time - Ascending order: 'modified_date_asc' \n * Edit date and time - Descending order: 'modified_date_desc' 'reading_date_desc' \n * Ascending order: 'title_asc' \n * Title - Descending order: 'title_desc' \n * Author - ascending order: n * Last viewed date and time - Ascending order: 'reading_date_asc' \n * Last viewed date and time - 'author_sc' \n * Author - Descending order: 'author_desc' \n * File size - Ascending order: 'file_size_asc' \n * File size - Descending order: 'file_size_desc' \n ",
        "parameters": [
          {
            "name": "entry_type",
            "in": "query",
            "description": "Type of item in list to be retrieved * 'documents' if there is no specification",
            "type": "string"
          },
          {
            "name": "search_target",
            "in": "query",
            "description": "If you do not specify keyword search or identifier designation * Please do not search and get all items",
            "type": "string"
          },
          {
            "name": "annotation_type",
            "in": "query",
            "description": "Annotation type * 'all' if not specified '",
            "type": "string"
          },
          {
            "name": "search_keyword",
            "in": "query",
            "description": "Keyword or identifier * Required if search_target is specified, Ignore if not found",
            "type": "string"
          },
          {
            "name": "origin_folder_id",
            "in": "query",
            "description": "Folder ID for narrowing down only to items below the optional folder * 'root' if not specified",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "sort order of list to be retrieved * 'reading_date_desc' if not specified",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Acquisition start position * If there is no designation, from the beginning ",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to be acquired in a single API call. \n If not specified, get the default number of items (1300). \n However, if the data size that matches the condition is too large \n In principle, limit should be specified. \n * limit specification reference value · · · Recommendation: 100 cases, upper limit: 1000 cases \n",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify comma-separated items in 'commonEntryObjectResult' you want to retrieve * Return all items if not specified",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonEntryListObjectResult"
            }
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40002] Number specified parameter could not be recognized as numerical value \n * [40005] Specified character string other than prescribed option \n * [40006] Invalid parameter value was specified \n * [40012] Folder ID not specified in origin_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "post": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** ★ Obsoleted use deprecated ★ ** __ * n ** New document registration ** \n * After that, upload the file to the generated document ID Needed \n ",
        "parameters": [
          {
            "name": "doc_info",
            "in": "body",
            "description": "information of document to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentsPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDocumentIdObject"
            }
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40006] Unsupported filename was specified \n * [40007] Unable to process due to name duplication \n * [40012 ] Folder ID not specified in parent_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] The processing could not be completed due to insufficient storage capacity on the main unit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/documents2": {
      "get": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Get document list ** \n * entry_type Filter by item type \n * All (folder + document): 'all' \n * Document: 'documents' \n * 'Document_body' \n * Document body: 'document_body' \n * Document meta information (name, title, author): 'document_meta' \n * Document body: 'document_body' \n * Annotation preset Pattern string (★, *): 'annotation_pattern' \n * annotation_type Filter by annotation type \n <small> * search \\ _ influence on result when 'annotation \\ _ pattern' is specified for target </ 'highlights' \n * handwriting: 'handwritings' \n * sort order specification of order_type list <br> \n <small> * Folders and documents are glue </small> \n * Name - Ascending: 'entry_name_asc' \n * Name - Descending order: 'entry_name_desc', which is pinged in ascending order as folders are batched first and descending documents are listed first 'created_date_desc' \n * Ascending order: 'modified_date_asc' \n * Edit date / time - descending order: 'modified_date_desc' \n * Last viewed 'Reading_date_desc' \n * ascending order: 'title_asc' \n * title - descending order: 'title_desc' \n * author - ascending: 'author_asc' \\ ascending order: 'reading_date_asc' \n * n * Author - Descending order: 'author_desc' \n * File size - Ascending order: 'file_size_asc' \n * File size - Descending order: 'file_size_desc' \n ",
        "parameters": [
          {
            "name": "entry_type",
            "in": "query",
            "description": "Type of item in list to be retrieved * 'documents' if there is no specification",
            "type": "string"
          },
          {
            "name": "search_target",
            "in": "query",
            "description": "If you do not specify keyword search or identifier designation * Please do not search and get all items",
            "type": "string"
          },
          {
            "name": "annotation_type",
            "in": "query",
            "description": "Annotation type * 'all' if not specified ",
            "type": "string"
          },
          {
            "name": "search_keyword",
            "in": "query",
            "description": "Keyword or identifier * Required if search_target is specified, Ignore if not found",
            "type": "string"
          },
          {
            "name": "origin_folder_id",
            "in": "query",
            "description": "Folder ID for narrowing down only to items below the optional folder * 'root' if not specified",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "sort order of list to be retrieved * 'reading_date_desc' if not specified",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Acquisition start position * If there is no designation, from the beginning ",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to be acquired in a single API call. \n If not specified, get the default number of items (1300). \n However, if the data size that matches the condition is too large \n In principle, limit should be specified. \n * limit specification reference value · · · Recommendation: 100 cases, upper limit: 1000 cases ",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify comma-separated items in 'commonEntryObjectResult2' you want to retrieve * Return all items if not specified",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/commonEntryListObjectResult2"
            }
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40002] Number specified parameter could not be recognized as numerical value \n * [40005] Specified character string other than prescribed option \n * [40006] Invalid parameter value was specified \n * [40012] Folder ID not specified in origin_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to read folders with the ID specified by origin_folder_id",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "post": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** New Document Registration ** \n * After that, you need to upload the file to the generated document ID \n",
        "parameters": [
          {
            "name": "doc_info",
            "in": "body",
            "description": "information of document to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentsPostRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/commonDocumentIdObject2"
            }
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40006] Unsupported filename was specified \n * [40007] Unable to process due to name duplication \n * [40012 ] Folder ID not specified in parent_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to write to the folder with ID specified by parent_folder_id",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] The processing could not be completed due to insufficient storage capacity on the main unit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/documents/{document_id}": {
      "get": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** ★ Obsoleted use deprecated ★ ** __ * n ** Acquire information on the document corresponding to the specified document ID ** \n",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "document ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonEntryObjectResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** ★ Obsoleted use deprecated ★ ** __ * n ** Document name change / move (document information update) ** \n",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "doc_update_info",
            "in": "body",
            "description": "information of document to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentsDocumentIdPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40006] Unsupported filename was specified \n * [40007] Unable to process due to name duplication \n * [40012 ] Folder ID not specified in parent_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] The processing could not be completed due to insufficient storage capacity on the main unit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Delete Document ** \n",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "ID of document to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "del_target_doc_info",
            "in": "body",
            "description": "information of the document to be deleted",
            "schema": {
              "$ref": "#/definitions/documentsDocumentIdDeleteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40017] Can not operate because document revision has been updated",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/documents2/{document_id}": {
      "get": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Get document information corresponding to specified document ID ** \n",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "document ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/commonEntryObjectResult2"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to read documents with the specified ID",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Name change / movement of document (update of document information) ** \n",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "doc_update_info",
            "in": "body",
            "description": "information of document to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentsDocumentIdPutRequest2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful"
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40006] Unsupported filename was specified \n * [40007] Unable to process due to name duplication \n * [40012 ] Folder ID not specified in parent_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to operate the document with the specified ID or you do not have permission to write to the folder with the ID specified by parent_folder_id",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] The processing could not be completed due to insufficient storage capacity on the main unit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/documents/{document_id}/file": {
      "get": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/pdf"
        ],
        "description": "** Get the file entity of the document corresponding to the specified ID ** \n * ETag is set in the response header and divided download using it is possible.Etag contains the revision of the downloaded document ( Three elements are set, one calculated on Deneb side), a hash value of the download file, and a file hash of the document (calculated on the client side). ",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Upload file entity of document ** \n * Link file entity to specific document. \n * Overwrite existing document_id if it exists already. \n * Split upload is possible. \n ",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "ID of document to be linked by uploading * Register document first and obtain ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file entity",
            "required": true,
            "type": "file"
          },
          {
            "name": "offset_bytes",
            "in": "query",
            "description": "Specify when split uploading ※ For details see Instruction",
            "type": "string"
          },
          {
            "name": "total_bytes",
            "in": "query",
            "description": "Specify when split uploading ※ For details see Instruction",
            "type": "string"
          },
          {
            "name": "target_revision",
            "in": "query",
            "description": "The revision to upload the file entity to specify the latest revision that the client knows about. The document is updated in Deneb after grasping on the client side, and the revision value to be managed is specified If there is a state different from target_revision, return error, do not do revision check if target_revision is not specified, do not specify target_revision when new uploading. ",
            "type": "string"
          },
          {
            "name": "file_hash",
            "in": "query",
            "description": "Hash value of the file entity calculated on the client side.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonFileUploadResult"
            }
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40002] Number specified parameter could not be recognized as numerical value \n * [40010] File not specified \n * 40011] Inconsistent with split upload \n * [40017] Can not operate because document revision has been updated ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] The processing could not be completed due to insufficient storage capacity on the main unit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/documents/{document_id}/copy": {
      "post": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Duplicate document ** \n",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "ID of source document",
            "required": true,
            "type": "string"
          },
          {
            "name": "doc_copy_info",
            "in": "body",
            "description": "Destination information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentsDocumentIdCopyPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonDocumentIdObject"
            }
          },
          "400": {
            "description": "* [40001] Required parameter was not specified \n * [40006] Unsupported filename was specified \n * [40007] Unable to process due to name duplication \n * [40012 ] Folder ID not specified in parent_folder_id was specified ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] The processing could not be completed due to insufficient storage capacity on the main unit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/documents/{document_id}/attribute": {
      "get": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Obtaining document attribute information **",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "ID of the document that acquires the attribute",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Document attribute information",
            "schema": {
              "$ref": "#/definitions/documentAttributeObject2"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to read documents with the specified ID",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] Document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** Set document attribute information ** \n * One 'action_performer' must be set to one of 'result', 'request', 'indicate' \n * Be careful not to keep previous setting value with omission or NULL specification, unlike other setting change APIs",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "ID of the document that acquires the attribute",
            "required": true,
            "type": "string"
          },
          {
            "name": "attribute_info",
            "in": "body",
            "description": "設定する属性情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/documentAttributeObject2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40002] 数値を期待しているパラメータについて、数値として認識できなかった\n* [40004] 指定パラメータが ISO8601 フォーマットでない\n* [40005] 仕様で定めた選択肢以外のもの指定した\n* [40006] 不正なパラメータ値が指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to alter the document with the specified ID",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] The document with the specified ID does not exist",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within the expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] Processing could not be completed due to insufficient storage capacity of the device",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "document"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**Clear document attribute information**",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "ID of the document whose attributes are to be cleared",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "* [40310] You do not have permission to alter the document with the specified ID",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのドキュメントが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/folders": {
      "post": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**★Obsoleted 使用非推奨★** <br/><br/>\n**フォルダーの新規作成**\n",
        "parameters": [
          {
            "name": "folder_info",
            "in": "body",
            "description": "作成するフォルダーの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/foldersPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonFolderIdObject"
            }
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40006] サポートされていないフォルダー名が指定された\n* [40007] 名前重複により処理ができない\n* [40012] parent_folder_id に存在しないフォルダーIDが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/folders2": {
      "post": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**フォルダーの新規作成**\n",
        "parameters": [
          {
            "name": "folder_info",
            "in": "body",
            "description": "作成するフォルダーの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/foldersPostRequest2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commonFolderIdObject2"
            }
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40006] サポートされていないフォルダー名が指定された\n* [40007] 名前重複により処理ができない\n* [40012] parent_folder_id に存在しないフォルダーIDが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] parent_folder_id で指定されたIDのフォルダーの書き込み権限がない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/folders/{folder_id}": {
      "get": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**★Obsoleted 使用非推奨★** <br/><br/>\n**指定IDに該当するフォルダーの情報を取得**\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "フォルダーのID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonEntryObjectResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**★Obsoleted 使用非推奨★** <br/><br/>\n**フォルダーの名称変更・移動 （フォルダーの情報更新）**\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "更新するフォルダーのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "folder_update_info",
            "in": "body",
            "description": "更新するフォルダーの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/foldersFolderIdPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40006] サポートされていないフォルダー名が指定された\n* [40007] 名前重複により処理ができない\n* [40012] parent_folder_id に存在しないフォルダーIDが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**フォルダーの削除**\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "削除するフォルダーのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "del_target_folder_info",
            "in": "body",
            "description": "削除する対象フォルダーの情報",
            "schema": {
              "$ref": "#/definitions/foldersFolderIdDeleteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40018] 指定されたIDのフォルダー配下にエントリーが存在するため削除は未実行",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/folders2/{folder_id}": {
      "get": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**指定IDに該当するフォルダーの情報を取得**\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "フォルダーのID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commonEntryObjectResult2"
            }
          },
          "403": {
            "description": "* [40310] 指定されたIDのフォルダーの読み込み権限がない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**フォルダーの名称変更・移動 （フォルダーの情報更新）**\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "更新するフォルダーのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "folder_update_info",
            "in": "body",
            "description": "更新するフォルダーの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/foldersFolderIdPutRequest2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40006] サポートされていないフォルダー名が指定された\n* [40007] 名前重複により処理ができない\n* [40012] parent_folder_id に存在しないフォルダーIDが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] 指定されたIDのフォルダーの操作権限がない、もしくは parent_folder_id で指定されたIDのフォルダーの書き込み権限がない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/folders/{folder_id}/entries": {
      "get": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**★Obsoleted 使用非推奨★** <br/><br/>\n**フォルダー内のエントリー一覧を取得**  \n * order_type　一覧のソート順指定<br>\n   <small>※フォルダーとドキュメントはグルーピングされ、昇順の場合はフォルダーがまとめて先に、降順の場合はドキュメントがまとめて先に列挙される</small>\n  * 名前-昇順 : 'entry_name_asc'\n  * 名前-降順 : 'entry_name_desc'\n  * 作成日時-昇順 : 'created_date_asc'\n  * 作成日時-降順 : 'created_date_desc'\n  * 編集日時-昇順 : 'modified_date_asc'\n  * 編集日時-降順 : 'modified_date_desc'\n  * 最終閲覧日時-昇順 : 'reading_date_asc'\n  * 最終閲覧日時-降順 : 'reading_date_desc'\n  * タイトル-昇順 : 'title_asc'\n  * タイトル-降順 : 'title_desc'\n  * 著者-昇順 : 'author_asc'\n  * 著者-降順 : 'author_desc'\n  * ファイルサイズ-昇順 : 'file_size_asc'\n  * ファイルサイズ-降順 : 'file_size_desc'\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "エントリー一覧を取得するフォルダーのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "取得する一覧のソート順 ※指定が無い場合は 'entry_name_asc'",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得開始位置 ※指定が無い場合は先頭から",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "1回のAPIコールで取得する一覧の最大取得件数。\n指定が無い場合はデフォルト件数(1300件)までを取得。\nただし、条件に合致するデータサイズが大きすぎる場合には応答が無くなることがあるため、\n基本的にlimitの指定を行うこと。 \n※limit指定参考値・・・推奨:100件、上限:1000件\n",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "取得したい'commonEntryObjectResult'内の項目をカンマ区切りで指定 ※指定が無い場合は全項目を返却",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonEntryListObjectResult"
            }
          },
          "400": {
            "description": "* [40002] Numeric parameter was not recognized as numerical value\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/folders/{folder_id}/entries2": {
      "get": {
        "tags": [
          "folder"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**フォルダー内のエントリー一覧を取得**  \n * order_type　一覧のソート順指定<br>\n   <small>※フォルダーとドキュメントはグルーピングされ、昇順の場合はフォルダーがまとめて先に、降順の場合はドキュメントがまとめて先に列挙される</small>\n  * 名前-昇順 : 'entry_name_asc'\n  * 名前-降順 : 'entry_name_desc'\n  * 作成日時-昇順 : 'created_date_asc'\n  * 作成日時-降順 : 'created_date_desc'\n  * 編集日時-昇順 : 'modified_date_asc'\n  * 編集日時-降順 : 'modified_date_desc'\n  * 最終閲覧日時-昇順 : 'reading_date_asc'\n  * 最終閲覧日時-降順 : 'reading_date_desc'\n  * タイトル-昇順 : 'title_asc'\n  * タイトル-降順 : 'title_desc'\n  * 著者-昇順 : 'author_asc'\n  * 著者-降順 : 'author_desc'\n  * ファイルサイズ-昇順 : 'file_size_asc'\n  * ファイルサイズ-降順 : 'file_size_desc'\n",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "エントリー一覧を取得するフォルダーのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "取得する一覧のソート順 ※指定が無い場合は 'entry_name_asc'",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "取得開始位置 ※指定が無い場合は先頭から",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "1回のAPIコールで取得する一覧の最大取得件数。\n指定が無い場合はデフォルト件数(1300件)までを取得。\nただし、条件に合致するデータサイズが大きすぎる場合には応答が無くなることがあるため、\n基本的にlimitの指定を行うこと。 \n※limit指定参考値・・・推奨:100件、上限:1000件",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "取得したい'commonEntryObjectResult2'内の項目をカンマ区切りで指定 ※指定が無い場合は全項目を返却",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/commonEntryListObjectResult2"
            }
          },
          "400": {
            "description": "* [40002] Numeric parameter was not recognized as numerical value\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] 指定されたIDのフォルダーの読み込み権限がない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのフォルダーが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/viewer/configs/note_templates": {
      "get": {
        "tags": [
          "note template"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**ノートテンプレートの一覧**\n",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/viewerConfigsNoteTemplateGetResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "post": {
        "tags": [
          "note template"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**ノートテンプレート情報の作成**\n * ここではノートテンプレート情報の作成のみ行う。\n * 本APIでノートテンプレート情報を作成後、それに対してノートテンプレートファイル実体を「/viewer/configs/note_templates/{note_template_id}/file」にて紐付ける必要がある。\n",
        "parameters": [
          {
            "name": "note_template_info",
            "in": "body",
            "description": "作成するノートテンプレートの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/viewerConfigsNoteTemplatePostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/viewerConfigsNoteTemplatePostResult"
            }
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40006] サポートされていないファイル名が指定された\n* [40007] 名前重複により処理ができない\n* [40008] 登録可能なノートテンプレート数の上限に達している",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] Processing could not be completed due to insufficient storage capacity of the device",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/viewer/configs/note_templates/{note_template_id}": {
      "get": {
        "tags": [
          "note template"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "note_template_id",
            "in": "path",
            "description": "取得するノートテンプレートのID",
            "required": true,
            "type": "string"
          }
        ],
        "description": "**ノートテンプレートの情報取得**\n",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonTemplateObjectResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのノートテンプレートが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "note template"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**ノートテンプレートの情報を更新**\n",
        "parameters": [
          {
            "name": "note_template_id",
            "in": "path",
            "description": "更新するノートテンプレートのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "note_template_update_info",
            "in": "body",
            "description": "更新するノートテンプレートの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/viewerConfigsNoteTemplateTemplateIdPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40006] サポートされていないファイル名が指定された\n* [40007] 名前重複により処理ができない\n* [40009] 更新不可であるデフォルトノートテンプレートが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのノートテンプレートが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] Processing could not be completed due to insufficient storage capacity of the device",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "note template"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**ノートテンプレートの削除**\n",
        "parameters": [
          {
            "name": "note_template_id",
            "in": "path",
            "description": "削除するノートテンプレートのID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40009] 削除不可であるデフォルトノートテンプレートが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのノートテンプレートが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/viewer/configs/note_templates/{note_template_id}/file": {
      "put": {
        "tags": [
          "note template"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**ノートテンプレート実体のアップロード**\n * 特定のノートテンプレートに対してファイル実体を紐づける。\n * 既にnote_template_idに紐づくファイルが存在した場合は上書きする。\n * 分割アップロードが可能\n",
        "parameters": [
          {
            "name": "note_template_id",
            "in": "path",
            "description": "アップロードして紐づけるノートテンプレートのID ※先にノートテンプレート登録を行い、IDを取得",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "ファイル実体",
            "required": true,
            "type": "file"
          },
          {
            "name": "offset_bytes",
            "in": "query",
            "description": "分割アップロードの際に指定 ※詳細はInstructionを参照の事",
            "type": "string"
          },
          {
            "name": "total_bytes",
            "in": "query",
            "description": "分割アップロードの際に指定 ※詳細はInstructionを参照の事",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/commonFileUploadResult"
            }
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40002] Numeric parameter was not recognized as numerical value\n* [40009] 更新不可であるデフォルトノートテンプレートが指定された\n* [40010] ファイルが指定されていない\n* [40011] 分割アップロードで不整合\n* [40013] このファイル形式はサポートしない\n* [40014] このファイルは開く事ができない\n* [40015] このファイルは編集する事できない\n* [40016] このファイルはサイズの規格を満たしていない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのノートテンプレートが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "507": {
            "description": "* [50701] Processing could not be completed due to insufficient storage capacity of the device",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/viewer/status/preset_marks": {
      "get": {
        "tags": [
          "viewer management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**ハンドライティングのプリセットパターン一覧取得**  \n",
        "responses": {
          "200": {
            "description": "Successful response (パターンリスト)",
            "schema": {
              "$ref": "#/definitions/viewerStatusPresetMarksGetResult"
            }
          }
        }
      }
    },
    "/viewer/controls/open": {
      "put": {
        "tags": [
          "viewer management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**★Obsoleted 使用非推奨★** <br/><br/>\n**指定ドキュメントを開く**\n",
        "parameters": [
          {
            "name": "target_doc_info",
            "in": "body",
            "description": "開く対象のドキュメントの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/viewerControlsOpenPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのドキュメントが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/viewer/controls/open2": {
      "put": {
        "tags": [
          "viewer management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**指定ドキュメントを開く**\n * ページ番号は省略可能。その場合、開かれるページは端末側にオマカセ。\n * ページ番号が 0 もしくは負の値を指定した場合はエラー。\n * ページ番号がそのドキュメントの総ページ数より大きい値の場合は、最終ページが開く。",
        "parameters": [
          {
            "name": "target_doc_info",
            "in": "body",
            "description": "開く対象のドキュメントの情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/viewerControlsOpenPutRequest2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40002] Numeric parameter was not recognized as numerical value\n* [40006] 不正なパラメータ値が指定された(ページ数が 0 もしくは負の値)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40310] You do not have permission to alter the document with the specified ID",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたIDのドキュメントが存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/viewer/status/current_viewing": {
      "get": {
        "tags": [
          "viewer management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "**端末のドキュメント表示状態を取得**\n * ドキュメント閲覧中でない場合(設定画面になっている等)は、中身がほとんど空の応答が返る。",
        "responses": {
          "200": {
            "description": "表示状態情報",
            "schema": {
              "$ref": "#/definitions/viewerStatusCurrentViewingGetResult2"
            }
          },
          "403": {
            "description": "* [40310] 指定されたIDのドキュメントの読み込み権限がない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "本体設定情報をまとめて取得する",
        "responses": {
          "200": {
            "description": "設定情報をまとめたもの",
            "schema": {
              "$ref": "#/definitions/configsListResult"
            }
          }
        }
      }
    },
    "/system/configs/timezone": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "設定されているタイムゾーンを取得する",
        "responses": {
          "200": {
            "description": "タイムゾーンID ※詳細はInstructionを参照の事",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "タイムゾーンを設定する",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "タイムゾーンID ※詳細はInstructionを参照の事",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/datetime": {
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "現在の日時を設定する",
        "parameters": [
          {
            "name": "datetime",
            "in": "body",
            "description": "ISO8601 フォーマットの日時情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40004] 指定パラメータが ISO8601 フォーマットでない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/date_format": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "設定されている日付表記形式を取得する",
        "responses": {
          "200": {
            "description": "日付パターン文字列 ※詳細はInstructionを参照の事",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "日付表記形式を設定する",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "日付パターン文字列 ※詳細はInstructionを参照の事",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40006] 不正なパラメータ値が指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/time_format": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "設定されている日付表記形式を取得する",
        "responses": {
          "200": {
            "description": "以下のどれかの文字列を返却\n * '12hour' : 12時間表記\n * '24hour' : 24時間表記",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "日付表記形式を設定する",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "以下のどれかを文字列で指定する\n * '12hour' : 12時間表記\n * '24hour' : 24時間表記",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/initialized_flag": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "初期設定完了かどうかを取得する",
        "responses": {
          "200": {
            "description": "初期化済なら 'initialized' 初期化していない場合は 'none'",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "初期設定完了フラグを設定する",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "初期化後 'initialized' 設定解除なら 'none'",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/timeout_to_standby": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get the timeout before going to sleep",
        "responses": {
          "200": {
            "description": "Timeout (in minutes)<br>\nIf the timeout is infinite: 'never'",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Set the timeout before going to sleep",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "Specify a numerical value for the set time in minutes<br>\nTo never go to sleep, send 'never'",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40002] Numeric parameter was not recognized as numerical value\n* [40006] An invalid parameter value has been specified (numeric value is out of the specified range)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/owner": {
      "get": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get the owner name",
        "responses": {
          "200": {
            "description": "Owner name (JSON-escaped)",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings management"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Sets the owner's name",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "Owner's name (JSON-escaped)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40006] 不正なパラメータ値が指定された(桁数オーバーなど)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/status/storage": {
      "get": {
        "tags": [
          "Settings - status"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get device storage usage",
        "responses": {
          "200": {
            "description": "Storage usage",
            "schema": {
              "$ref": "#/definitions/statusStorageResult"
            }
          }
        }
      }
    },
    "/system/status/firmware_version": {
      "get": {
        "tags": [
          "Settings - status"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get device firmware version number and model name",
        "responses": {
          "200": {
            "description": "Firmware version number and model name",
            "schema": {
              "$ref": "#/definitions/statusFirmwareVersionResult"
            }
          }
        }
      }
    },
    "/system/status/mac_address": {
      "get": {
        "tags": [
          "Settings - status"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Obtain the physical address of the wifi network card on the device<br>\n※Hex-encoded, colon-separated MAC address (xx:xx:xx:xx:xx:xx)",
        "responses": {
          "200": {
            "description": "Address value",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      }
    },
    "/system/status/battery": {
      "get": {
        "tags": [
          "Settings - status"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get battery status",
        "responses": {
          "200": {
            "description": "Battery status",
            "schema": {
              "$ref": "#/definitions/statusBatteryResult2"
            }
          }
        }
      }
    },
    "/system/controls/indicate": {
      "post": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Display various notification dialogs on the screen",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "Dialog parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/indicationInfoObject2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/indicate/{indication_id}": {
      "put": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Display various notification dialogs on the screen<br>\n※ Any identifier can be specified if it is in UUID format<br>\n※ If you specify the same identifier as previously specified, the information in the corresponding dialog is overwritten.",
        "parameters": [
          {
            "name": "indication_id",
            "in": "path",
            "description": "Identifier (UUID format)",
            "required": true,
            "type": "string"
          },
          {
            "name": "indication_info",
            "in": "body",
            "description": "Dialog parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/indicationInfoObject2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40006] Identifier was not in UUID format",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Hide various notification dialogs corresponding to the specified identifier displayed on the screen<br>\n※Even if the dialog corresponding to the specified identifier is hidden by user operation, etc., it will succeed without error",
        "parameters": [
          {
            "name": "indication_id",
            "in": "path",
            "description": "Identifier specified when displaying (UUID format)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40006] Identifier was not in UUID format",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/screen_shot": {
      "get": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "image/png",
          "image/jpeg",
          "application/json"
        ],
        "description": "Acquisition of a screenshot image of the device (png format or jpeg format)<br>\n※In Polaris1.0, png format of 1650 x 2200 pixels",
        "responses": {
          "200": {
            "description": "Screenshot image",
            "schema": {
              "type": "file",
              "description": "Image data binary"
            }
          }
        }
      }
    },
    "/system/controls/update_firmware/precheck": {
      "get": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Check whether the firmware update of the device can be started",
        "responses": {
          "200": {
            "description": "Check result",
            "schema": {
              "$ref": "#/definitions/updateFirmwarePrecheckResult"
            }
          }
        }
      }
    },
    "/system/controls/update_firmware": {
      "put": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "本体のファームウェアアップデート開始する",
        "responses": {
          "204": {
            "description": "ファームウェアアップデート開始"
          },
          "403": {
            "description": "* [40302] 電池残量がファームウェアアップデートするのに十分でない\n* [40303] ファームウェアのイメージファイルが本体に転送されていない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] 複数同時にできない処理を実行中で、要求に応じられない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/update_firmware/file": {
      "put": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "description": "本体にファームウェアのイメージファイルを転送する<br>\n* 分割アップロードが可能\n* offset_bytes に 0 を指定してリクエストした場合、そのクライアントのIDがサーバ側で保持される\n* offset_bytes に 0 より大きい値を指定してリクエストした場合、サーバ側で保持しているIDと一致するクライアントからでなければ 503 応答を返す",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "ファイル実体",
            "required": true,
            "type": "file"
          },
          {
            "name": "offset_bytes",
            "in": "query",
            "description": "分割アップロードの際に指定 ※詳細はInstructionを参照の事",
            "required": true,
            "type": "string"
          },
          {
            "name": "total_bytes",
            "in": "query",
            "description": "分割アップロードの際に指定 ※詳細はInstructionを参照の事",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "受信完了",
            "schema": {
              "$ref": "#/definitions/commonFileUploadResult"
            }
          },
          "400": {
            "description": "* [40001] 必須パラメータが指定されていなかった\n* [40002] Numeric parameter was not recognized as numerical value\n* [40010] ファイルが指定されていない\n* [40011] 分割アップロードで不整合",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] 複数同時にできない処理を実行中で、要求に応じられない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/pastlog": {
      "get": {
        "tags": [
          "Settings - Device control"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "description": "Obtain various log information recorded in the device after encrypting them<br>\n※Note: It takes a long time to process and the data volume is about 10 MB",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "file",
              "description": "Encrypted log information"
            }
          }
        }
      }
    },
    "/system/configs/wifi": {
      "get": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get the ON/OFF status of the Wi-Fi adapter",
        "responses": {
          "200": {
            "description": "Value 'on' or 'off'",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Set Wi-Fi to ON or OFF status",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "'on' to enable, 'off' to disable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40005] An option not in the specifications was provided"
          },
          "403": {
            "description": "* [40302] Cannot turn on due to insufficient battery power on the device\n* [40307] The device cannot be turned on because it is in sleep mode",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] Processing cannot be performed in parallel.",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/wifi_accesspoints": {
      "get": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "List all registered access points",
        "responses": {
          "200": {
            "description": "List of registered access points<br>\n※ no password will be returned",
            "schema": {
              "$ref": "#/definitions/apConfigureListObject"
            }
          },
          "403": {
            "description": "* [40304] Wi-Fi is off so the request cannot be handled",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/wifi_accesspoints/{ssid}/{security}": {
      "get": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get the settings of the registered access point of the specified SSID",
        "parameters": [
          {
            "name": "ssid",
            "in": "path",
            "description": "SSID as URL encode string, in UTF-8",
            "required": true,
            "type": "string"
          },
          {
            "name": "security",
            "in": "path",
            "description": "Security mode ['nonsec'/'psk'/'eap']",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "登録済みアクセスポイントの設定情報<br>\n※ passwd は取得できず、常に未設定",
            "schema": {
              "$ref": "#/definitions/apConfigureObject"
            }
          },
          "403": {
            "description": "* [40304] Wi-Fi is off so the request cannot be handled",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] No access point registered for the given SSID and encryption method",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Delete registered access points\n",
        "parameters": [
          {
            "name": "ssid",
            "in": "path",
            "description": "SSID を URL encode したもの、文字コードは UTF-8",
            "required": true,
            "type": "string"
          },
          {
            "name": "security",
            "in": "path",
            "description": "暗号化方式 ['nonsec'/'psk'/'eap']",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "* [40304] Wi-Fi is off so the request cannot be handled",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] No access point registered for the given SSID and encryption method",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/certificates": {
      "delete": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Delete all registered EAP certificates (CA certificate, TLS client certificate)\n",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/system/configs/certificates/ca": {
      "get": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get a list of registered CA certificate names for EAP\n",
        "responses": {
          "200": {
            "description": "List of certificate names",
            "schema": {
              "$ref": "#/definitions/commonCertificatesListObject"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "EAP 用 CA 証明書の新規インストール<br>\n証明書名が同一のものがインストール済みの場合は上書きされる",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "EAP 用 CA 証明書情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/caCertificatesFileObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した\n* [40006] 証明書ファイルのデータ中に適切な証明書情報が見つからない\n* [40013] ファイル名の拡張子が、対応していない形式を指定された\n* [40014] 証明書のインストールに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/configs/certificates/client": {
      "get": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "登録済み EAP 用 TLS クライアント証明書の名前一覧を取得する\n",
        "responses": {
          "200": {
            "description": "List of certificate names",
            "schema": {
              "$ref": "#/definitions/commonCertificatesListObject"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings - Wireless Settings"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "EAP 用 TLS クライアント証明書の新規インストール<br>\n証明書名が同一のものがインストール済みの場合は上書きされる",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "EAP 用 TLS クライアント証明書情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clientCertificatesFileObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した\n* [40006] 証明書ファイルのデータ中に適切な証明書情報が見つからない\n* [40013] ファイル名の拡張子が、対応していない形式を指定された\n* [40014] 証明書のインストールに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] パスワードが正しくない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/status/wifi_state": {
      "get": {
        "tags": [
          "Settings - Get Wireless Status"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "現在の Wi-Fi 接続状況を取得する (アクセスポイント接続中は、そのアクセスポイントの情報も取得)",
        "responses": {
          "200": {
            "description": "Wi-Fi 接続状況\n* state が 'connecting', 'connected' 以外の場合、他のパラメータは未設定",
            "schema": {
              "$ref": "#/definitions/commonApObject"
            }
          },
          "403": {
            "description": "* [40304] Wi-Fi is off so the request cannot be handled",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/status/wps_state": {
      "get": {
        "tags": [
          "Settings - Get Wireless Status"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Wi-Fi Protected Setup&trade; (WPS) による Wi-Fi 登録処理の状況、もしくは結果を取得する",
        "responses": {
          "200": {
            "description": "状態値\n* 'none': 初期状態 (本体起動後、まだ一度も実行していない)\n* 'in_progress': 処理中\n* 'success': 成功\n* 'overlap_error': 複数のセッションを検知\n* 'wep_prohibited': サポート外のセキュリティ方式(WEP)\n* 'tkip_only_prohibited': サポート外のセキュリティ方式(TKIP)\n* 'timed_out': タイムアウト(2分)",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          },
          "403": {
            "description": "* [40304] Wi-Fi is off so the request cannot be handled",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/wifi_accesspoints/scan": {
      "post": {
        "tags": [
          "設定-無線制御"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Wi-Fi アクセスポイントのスキャンを行い、結果の一覧を取得する",
        "responses": {
          "200": {
            "description": "スキャンして見つかったアクセスポイントのリスト",
            "schema": {
              "$ref": "#/definitions/commonApListObject"
            }
          },
          "403": {
            "description": "* [40304] Wi-Fi is off so the request cannot be handled",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] Processing did not complete within expected time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] Processing cannot be performed in parallel.",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/wifi_accesspoints/register": {
      "put": {
        "tags": [ "Setting - wireless control" ],
        "schemes": [ "https" ],
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "description": "Request to connect to the access point after new Wi-Fi access point registration or change of registered access point setting \n * Access point with the same SSID and same encryption method already registered \n * static_address, gateway, network_mask, dns1, dns2 are mandatory if \n * dhcp is 'false' \n (static_address, network_mask, dns1 is not empty, gateway, dns2 Proxy_port is required (empty character is acceptable) \n * If eap, eap_phase 2, eap_id, eap_idid, eap_cacert, eap_cert are required if security is 'eap'. \n * If proxy is 'true', proxy_host and proxy_port are required (Null character is acceptable.) \n * When changing the setting of registered access point, specify all items that have not been changed \n * exceptionally passwd only, unmodified or empty character 'no change' Interpret",
        "parameters": [
          {
            "name": "ap",
            "in": "body",
            "description": "Access point setting content",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apConfigureObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON \n * [40001] mandatory parameter was not specified \n * [40002] Numeric parameter was not recognized as numerical value \n * 40003] Failed to decode Base64 \n * [40005] A character string other than the prescribed option was specified \n * [40006] Incorrect parameter value was specified \n * [40008] Registerable access The maximum number of points has been reached ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40304] Can not process because Wi-Fi is OFF",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/wps_start/button": {
      "put": {
        "tags": [
          "Setting - wireless control"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Wi-Fi registration initiated by Wi-Fi Protected Setup & trade (WPS) (button type, asynchronous)",
        "responses": {
          "204": {
            "description": "Success (registration sequence started)"
          },
          "403": {
            "description": "* [40304] Can not process because Wi-Fi is OFF",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] Processing that can not be done at the same time is being executed and can not respond to requests",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/wps_start/pin": {
      "put": {
        "tags": [
          "設定-無線制御"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Wi-Fi registration start (PIN type, asynchronous) by Wi-Fi Protected Setup & trade; (WPS)",
        "responses": {
          "200": {
            "description": "Registration sequence started, Get PIN",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          },
          "403": {
            "description": "* [40304] Can not process because Wi-Fi is OFF",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "408": {
            "description": "* [40800] PIN could not be acquired within the assumed time (60 seconds)",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] Processing that can not be done at the same time is being executed and can not respond to requests",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/system/controls/wps_cancel": {
      "put": {
        "tags": [
          "設定-無線制御"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Manual cancellation of Wi-Fi registration by Wi-Fi Protected Setup & trade ((WPS)",
        "responses": {
          "204": {
            "description": "Success (stop registration sequence)"
          },
          "403": {
            "description": "* [40304] Can not process because Wi-Fi is OFF",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/serial_number": {
      "get": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get body serial number <br> \n <small> * Enable HTTP communication </small>",
        "responses": {
          "200": {
            "description": "body serial number",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      }
    },
    "/register/information": {
      "get": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Getting various information on the main unit <br> \n <small> * Enable HTTP communication </small>",
        "responses": {
          "200": {
            "description": "various information on the main body",
            "schema": {
              "$ref": "#/definitions/deviceInformationResult"
            }
          }
        }
      }
    },
    "/register/pin": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその1<br>\n<small>※HTTP通信が可能、詳しくは別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
        "responses": {
          "200": {
            "description": "M1<br><small>※別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        }
      }
    },
    "/register/hash": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその2<br>\n<small>※HTTP通信が可能、詳しくは別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
        "parameters": [
          {
            "name": "M2",
            "in": "body",
            "description": "M2<br><small>※別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "M3<br><small>※別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] 登録シーケンスに基づくパラメータの検証結果に問題あり\n* [40305] リトライ制限・時間制限により、登録シーケンスを最初からやりなおす必要あり",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/ca": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその3<br>\n<small>※HTTP通信が可能、詳しくは別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
        "parameters": [
          {
            "name": "M4",
            "in": "body",
            "description": "M4<br><small>※別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "M5<br><small>※別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] 登録シーケンスに基づくパラメータの検証結果に問題あり\n* [40305] リトライ制限・時間制限により、登録シーケンスを最初からやりなおす必要あり",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその4<br>\n<small>※HTTP通信が可能、詳しくは別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
        "parameters": [
          {
            "name": "M6",
            "in": "body",
            "description": "M6<br><small>※別紙 'クライアント登録用WebAPI補足.pptx' 参照</small>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "登録完了"
          },
          "400": {
            "description": "* [40000] JSONのパースに失敗した(もしくは中身が何もなかった)\n* [40001] 必須パラメータが指定されていなかった\n* [40003] Base64のデコードに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] 登録シーケンスに基づくパラメータの検証結果に問題あり\n* [40305] リトライ制限・時間制限により、登録シーケンスを最初からやりなおす必要あり",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/dcss1": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Client registration sequence part 1 (for DCSS) <br> \n <small> * HTTP communication is possible, see the attachment 'WebAPI supplement for DCSS registration .pptx' reference </small>",
        "responses": {
          "200": {
            "description": "M5 <br> <small> ※ Other paper DCSS login WebAPI make up. Pptx 'reference </small>",
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          },
          "403": {
            "description": "* [40301] There is a problem with the verification result of the parameter based on the registration sequence \n * [40305] It is necessary to restart the registration sequence from the beginning due to the retry limit / time limit",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/dcss2": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその2 (DCSS向け)<br>\n<small>※HTTP通信が可能、詳しくは別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
        "parameters": [
          {
            "name": "M2",
            "in": "body",
            "description": "M2<br><small>※別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "M3<br><small>※別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] 登録シーケンスに基づくパラメータの検証結果に問題あり\n* [40305] リトライ制限・時間制限により、登録シーケンスを最初からやりなおす必要あり",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/dcss3": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその3 (DCSS向け)<br>\n<small>※HTTP通信が可能、詳しくは別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
        "parameters": [
          {
            "name": "M4",
            "in": "body",
            "description": "M4<br><small>※別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "M5<br><small>※別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] 登録シーケンスに基づくパラメータの検証結果に問題あり\n* [40305] リトライ制限・時間制限により、登録シーケンスを最初からやりなおす必要あり",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/dcss4": {
      "post": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "クライアント登録シーケンスその4 (DCSS向け)<br>\n<small>※HTTP通信が可能、詳しくは別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
        "parameters": [
          {
            "name": "M6",
            "in": "body",
            "description": "M6<br><small>※別紙 'DCSS登録用WebAPI補足.pptx' 参照</small>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonRegisterObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "登録完了"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40003] Base64のデコードに失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40301] 登録シーケンスに基づくパラメータの検証結果に問題あり\n* [40305] リトライ制限・時間制限により、登録シーケンスを最初からやりなおす必要あり",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/register/cleanup": {
      "put": {
        "tags": [
          "Client registration"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Instruct clearing display of main screen related to client registration sequence",
        "responses": {
          "204": {
            "description": "結果に依らず応答"
          }
        }
      }
    },
    "/auth/nonce/{client_id}": {
      "get": {
        "tags": [
          "Client authentication"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Nonce (ワンタイムトークン) を取得する",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "クライアントの識別子",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nonce (ワンタイムトークン) 情報",
            "schema": {
              "$ref": "#/definitions/commonNonceObjectResult"
            }
          },
          "404": {
            "description": "* [40401] 指定された識別子のクライアントは登録されていない ",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/auth": {
      "put": {
        "tags": [
          "Client authentication"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "To authenticate <br> \nnonce_signed, specify Nonce (one-time token) digitally signed with SHA 256 signature algorithm using K_PRIV_C (client's private key)",
        "parameters": [
          {
            "name": "auth_info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "認証に成功"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "* [40100] 認証に失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/extensions/status": {
      "get": {
        "tags": [
          "拡張アプリ"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Obtain a list of state values (for extended applications)",
        "responses": {
          "200": {
            "description": "List of various state values <br> (JSON attribute name 'item 1, item 2 ...' changes dynamically)",
            "schema": {
              "$ref": "#/definitions/extensionsStatusGetResult"
            }
          }
        }
      }
    },
    "/extensions/status/{item}": {
      "get": {
        "tags": [
          "拡張アプリ"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "(拡張アプリ向け) 状態値を取得する",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "description": "状態項目名",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "指定された状態項目の状態値",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          },
          "404": {
            "description": "* [40401] 拡張アプリには指定された状態項目が存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/extensions/configs": {
      "get": {
        "tags": [
          "拡張アプリ"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Obtain a list of setting values (for extended applications)",
        "responses": {
          "200": {
            "description": "各種設定値の一覧<br>(JSONの属性名 'item1, item2...' は動的に変化する)",
            "schema": {
              "$ref": "#/definitions/extensionConfigsGetResult"
            }
          }
        }
      }
    },
    "/extensions/configs/{item}": {
      "get": {
        "tags": [
          "拡張アプリ"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "(拡張アプリ向け) 設定値を取得する",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "description": "設置項目名",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "指定された設定項目の設定値",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          },
          "404": {
            "description": "* [40401] 拡張アプリには指定された設定項目が存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "拡張アプリ"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "(拡張アプリ向け) 指定した内容で設定を変更する",
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "description": "設定項目名",
            "required": true,
            "type": "string"
          },
          {
            "name": "config",
            "in": "body",
            "description": "設定値情報",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "指定されたパラメータが不正",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 拡張アプリには指定された設定項目が存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/testmode/auth/nonce": {
      "get": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Acquire Nonce (One Time Token) for Test Mode Dedicated Authentication",
        "responses": {
          "200": {
            "description": "Nonce (one time token) information",
            "schema": {
              "$ref": "#/definitions/commonNonceObjectResult"
            }
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/testmode/auth": {
      "put": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "To do authentication exclusively for test mode <br> <br> # nonce_signed specifies Nonce (one-time token) digitally signed with SHA 256 signature algorithm using K_PRIV_DT (secret key of client dedicated to test mode) ",
        "parameters": [
          {
            "name": "auth_info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/specialAuthPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "認証に成功"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "* [40100] 認証に失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/testmode/launch": {
      "put": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Test mode UI display",
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/testmode/recovery_mode": {
      "put": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Restart main unit in recovery mode",
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/testmode/assets/{path}": {
      "get": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/octet-stream",
          "text/plain",
          "application/json"
        ],
        "description": "Acquire file entity or folder information in the test mode dedicated storage area",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "ファイル/フォルダーの相対パスをURLエンコードしたもの<br>\nデコードした結果の末尾が'/'の場合は、フォルダー情報を要求されたと判断",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "* ファイル指定の場合、指定ファイルの実体\n* フォルダー指定の場合、指定フォルダー内のファイルとフォルダーの一覧をtext/plainで返す<br>\n  (一覧について、末尾に '/' があればフォルダー、なければファイルを表す)",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "* [40006] パラメータに不正なパスが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたパスにファイル/フォルダーは存在しない\n * ファイル指定で、そのパスにあるのはフォルダーだった場合も該当\n * フォルダー指定で、そのパスにあるのはファイルだった場合も該当",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Upload files or create folders within the test mode dedicated storage area <br> \n Folders up to the middle of the specified path will be generated automatically when appropriate. \n Something on the same path If it is a file or a folder, it is overwritten after deleting it without asking questions ",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "URL-encoded relative path of file / folder <br> \nThe result of decode is '/', judge that folder creation was requested",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "ファイル実体(フォルダー作成の場合は不要)",
            "type": "file"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40006] パラメータに不正なパスが指定された\n* [40010] ファイル指定なのに、ファイル実体が指定されていない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Test mode"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "テストモード専用ストレージ領域内のファイル/フォルダーを削除<br>\nフォルダーを指定した場合は、そのフォルダー以下を再帰的に削除",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "ファイル/フォルダーの相対パスをURLエンコードしたもの<br>\nデコードした結果の末尾が'/'の場合は、フォルダー削除を要求されたと判断",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40006] パラメータに不正なパスが指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40300] テストモードとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたパスにファイル/フォルダーは存在しない\n * ファイル指定で、そのパスにあるのはフォルダーだった場合も該当\n * フォルダー指定で、そのパスにあるのはファイルだった場合も該当",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/kitting/auth/nonce": {
      "get": {
        "tags": [
          "OEM (Kit-preparation)"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Acquire Nonce (one-time token) for kitting-only authentication",
        "responses": {
          "200": {
            "description": "Nonce (ワンタイムトークン) 情報",
            "schema": {
              "$ref": "#/definitions/commonNonceObjectResult"
            }
          },
          "403": {
            "description": "* [40300] キッティングとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/kitting/auth": {
      "put": {
        "tags": [
          "OEM (Kit-preparation)"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "To do authentication exclusively for kitting \nnonce_signed, specify Nonce (one time token) digitally signed with SHA256 signature algorithm using K_PRIV_DK (secret key of client dedicated to test mode)",
        "parameters": [
          {
            "name": "auth_info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/specialAuthPutRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "認証に成功"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "401": {
            "description": "* [40100] 認証に失敗した",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40300] キッティングとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/kitting/register/code": {
      "put": {
        "tags": [
          "OEM (Kit-preparation)"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "description": "Set DCSS URL and registration code beforehand in order to register DCSS with kitting",
        "parameters": [
          {
            "name": "code_info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kittingRegisterCodeRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40002] Numeric parameter was not recognized as numerical value\n* [40006] パラメータに不正な内容が指定された",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "403": {
            "description": "* [40300] キッティングとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/kitting/shutdown": {
      "put": {
        "tags": [
          "OEM (Kit-preparation)"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "description": "キッティングの手順の一環として、本体をシャットダウンする",
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "* [40300] キッティングとして規定された手順以外でアクセスした",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "503": {
            "description": "* [50301] 複数同時にできない処理を実行中で、要求に応じられない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/resolve/entry/{path}": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "** ★ Obsoleted use deprecated ★ ** __ * \n Get entry information from the full path of the document / folder <br> \n * Change the root folder to 'Document /' Be careful with expressing ",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "ドキュメント/フォルダーのフルパスをURLエンコードしたもの",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "エントリー情報",
            "schema": {
              "$ref": "#/definitions/commonEntryObjectResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたパスにドキュメント/フォルダーは存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/resolve/entry/path/{path}": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Get entry information from full path of document / folder <br> \n * Note that root folder is represented as 'Document /'",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "ドキュメント/フォルダーのフルパスをURLエンコードしたもの",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "エントリー情報",
            "schema": {
              "$ref": "#/definitions/commonEntryObjectResult2"
            }
          },
          "403": {
            "description": "* [40310] 指定されたパスのドキュメント/フォルダーの読み込み権限がない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          },
          "404": {
            "description": "* [40401] 指定されたパスにドキュメント/フォルダーは存在しない",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/resolve/entry/ext_id/{ext_id}": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Retrieve the list of entry information for which the specified external ID is set <br> \n * Entries that do not have read permission are not included in the list (no error) <br> \n * If there is no corresponding entry, respond with an empty list ",
        "parameters": [
          {
            "name": "ext_id",
            "in": "path",
            "description": "外部IDをURLエンコードしたもの",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "エントリー情報のリスト",
            "schema": {
              "$ref": "#/definitions/commonEntryListObjectResult2"
            }
          }
        }
      }
    },
    "/notify/login_result": {
      "put": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Notify results of DCSS login processing execution",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "ログイン処理実行結果\n * 'success' : 成功\n * 'failure' : 失敗",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/notify/logout_result": {
      "put": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "DCSS のログアウト処理実行の結果を通知する。",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "ログアウト処理実行結果\n * 'success' : 成功\n * 'failure' : 失敗",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "* [40000] Failed to parse JSON\n* [40001] Required parameters were not specified\n* [40005] An option not in the specifications was provided",
            "schema": {
              "$ref": "#/definitions/errorResult"
            }
          }
        }
      }
    },
    "/api_version": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "提供する Web API のバージョンを取得<br>\n<small>※HTTP通信が可能</small>",
        "responses": {
          "200": {
            "description": "バージョン情報 (整数値)",
            "schema": {
              "$ref": "#/definitions/commonValueObject"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "schemes": [
          "https"
        ],
        "produces": [
          "application/json"
        ],
        "description": "ただ応答をするだけ",
        "responses": {
          "204": {
            "description": "応答"
          }
        }
      }
    }
  },
  "definitions": {
    "errorResult": {
      "type": "object",
      "required": [
        "error_code",
        "message"
      ],
      "properties": {
        "error_code": {
          "type": "string",
          "description": "Error code(詳細は別資料参照)"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "commonDocumentIdObject": {
      "type": "object",
      "required": [
        "document_id"
      ],
      "properties": {
        "document_id": {
          "description": "Document ID",
          "type": "string"
        }
      }
    },
    "commonFolderIdObject": {
      "type": "object",
      "required": [
        "folder_id"
      ],
      "properties": {
        "folder_id": {
          "description": "Folder ID",
          "type": "string"
        }
      }
    },
    "commonValueObject": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "description": "状態値/設定値",
          "type": "string"
        }
      }
    },
    "commonEntryListObjectResult": {
      "type": "object",
      "required": [
        "count",
        "entry_list_hash",
        "entry_list"
      ],
      "properties": {
        "count": {
          "description": "検索条件に合致する結果の全件数。（entry_listの件数とは必ずしも一致しない。）",
          "type": "integer"
        },
        "entry_list_hash": {
          "description": "検索条件に合致する結果リストのハッシュ値。取得対象のフォルダー配下のリストに関する更新有無のチェックに使用可能。",
          "type": "string"
        },
        "entry_list": {
          "description": "指定条件に基づいて取得されたエントリーのリスト。ゼロ件の場合はsizeゼロのリストを返却。",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonEntryObjectResult"
          }
        }
      }
    },
    "commonEntryObjectResult": {
      "type": "object",
      "required": [
        "entry_id",
        "entry_name",
        "entry_path",
        "entry_type",
        "created_date",
        "is_new"
      ],
      "properties": {
        "entry_id": {
          "description": "Denebが発行したドキュメント/フォルダーのID<br>\n※ルートフォルダーの場合は'root'という値で返却",
          "type": "string"
        },
        "entry_name": {
          "description": "Entry name (Filename / Folder name)",
          "type": "string"
        },
        "entry_path": {
          "description": "エントリーのフルパス ※ルートフォルダーは'Document/'と表現される",
          "type": "string"
        },
        "entry_type": {
          "description": "Type of entry item (file: 'document', folder: 'folder')",
          "type": "string"
        },
        "created_date": {
          "description": "エントリー作成日時(ISO8601 フォーマット)",
          "type": "string"
        },
        "modified_date": {
          "description": "エントリー更新日時(ISO8601 フォーマット) ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "mime_type": {
          "description": "ファイルのMimeType ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "file_size": {
          "description": "ファイルサイズ(単位：byte)<br>\n※entry_typeがフォルダーの場合はnull<br>\n※本項目により取得したサイズは、実際のファイルサイズと異なる場合がある（クライアントが本項目の値をWeb APIにより取得する前後のタイミングでDeneb上で対象ドキュメントが編集中であったり、別クライアントからファイルが更新される場合等）。",
          "type": "string"
        },
        "document_type": {
          "description": "ドキュメント種別（通常ドキュメント:'normal', ノート:'note'）※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "author": {
          "description": "ドキュメントの著者名 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "title": {
          "description": "ドキュメントのタイトル ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "total_page": {
          "description": "ドキュメントのページ数 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "current_page": {
          "description": "ドキュメントの直近で開かれていたページ番号 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "reading_date": {
          "description": "ドキュメントの最終閲覧日時(ISO8601 フォーマット) ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "parent_folder_id": {
          "description": "このエントリーが格納されているフォルダーのID<br>\n※ルートフォルダーの場合は'root'<br>\n※ルートフォルダーの親は存在しないので、その場合はnull",
          "type": "string"
        },
        "is_new": {
          "description": "エントリーが新規に追加されたものか 新規:'true',新規でない:'false'",
          "type": "string"
        },
        "document_source": {
          "description": "エントリーの配付元等の情報 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "file_hash": {
          "description": "ドキュメントのファイルハッシュ（クライアント側で計算されたもの）。 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "file_revision": {
          "description": "ドキュメントのリビジョン（Deneb側で計算されたもの）。 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        }
      }
    },
    "commonApListObject": {
      "type": "object",
      "required": [
        "aplist"
      ],
      "properties": {
        "aplist": {
          "description": "アクセスポイントのリスト",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonApObject"
          }
        }
      }
    },
    "commonApObject": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "ssid": {
          "description": "SSID を BASE64 encode したもの、文字コードは UTF-8",
          "type": "string"
        },
        "security": {
          "description": "暗号化方式 ['nonsec'/'psk'/'eap']",
          "type": "string"
        },
        "state": {
          "description": "ネットワークの状態<br>\n- 'none': 状態なし(未登録のアクセスポイント)<br>\n- 'connecting': 接続処理中<br>\n- 'connected': 接続完了<br>\n- 'saved': 接続はしていないが、設定は保存されている状態<br>\n- 'disabled': 何らかの原因で接続できない状態 (例: パスワード間違い)",
          "type": "string"
        },
        "frequency_band": {
          "description": "周波数帯 ['2.4ghz'/'5ghz']",
          "type": "string"
        },
        "rssi_level": {
          "description": "電波強度 (0～3 の4段階、-1 は圏外を示す)",
          "type": "string"
        }
      }
    },
    "commonCertificatesListObject": {
      "type": "object",
      "required": [
        "cert"
      ],
      "properties": {
        "cert": {
          "description": "証明書名",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonCertificatesObject"
          }
        }
      }
    },
    "commonCertificatesObject": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "証明書名",
          "type": "string"
        }
      }
    },
    "commonNonceObjectResult": {
      "type": "object",
      "required": [
        "nonce"
      ],
      "properties": {
        "nonce": {
          "type": "string",
          "description": "Nonce (ワンタイムトークン)"
        }
      }
    },
    "documentsPostRequest": {
      "type": "object",
      "required": [
        "parent_folder_id",
        "file_name",
        "document_source"
      ],
      "properties": {
        "parent_folder_id": {
          "description": "作成先のフォルダーID ※ルートフォルダーは'root'と指定する",
          "type": "string"
        },
        "file_name": {
          "description": "作成するドキュメントのファイル名",
          "type": "string"
        },
        "document_source": {
          "description": "ドキュメントの配付元等の情報 ※Polaris1.0では''(空文字)固定",
          "type": "string"
        }
      }
    },
    "commonFileUploadResult": {
      "type": "object",
      "required": [
        "received_bytes",
        "current_bytes",
        "completed",
        "file_revision"
      ],
      "properties": {
        "received_bytes": {
          "description": "サーバーで受信したアップロードデータのサイズ(単位:byte)",
          "type": "string"
        },
        "current_bytes": {
          "description": "以前の分割アップロードで受信したデータも含めた累積サイズ(単位:byte)",
          "type": "string"
        },
        "completed": {
          "description": "サーバ側でアップロードが完了したと判定したら 'yes' / まだ分割アップロードの途中と判定したら 'no'",
          "type": "string"
        },
        "file_revision": {
          "description": "ドキュメントのリビジョン（Deneb側で計算されたもの）",
          "type": "string"
        }
      }
    },
    "documentsDocumentIdPutRequest": {
      "type": "object",
      "properties": {
        "parent_folder_id": {
          "description": "変更後の親フォルダーのID ※NULLの場合は変更しない。ルートフォルダーは'root'と指定する。",
          "type": "string"
        },
        "file_name": {
          "description": "変更後のドキュメントのファイル名 ※NULLの場合は変更しない",
          "type": "string"
        }
      }
    },
    "documentsDocumentIdCopyPostRequest": {
      "type": "object",
      "required": [
        "parent_folder_id"
      ],
      "properties": {
        "parent_folder_id": {
          "description": "複製先の親フォルダーのID ※ルートフォルダーは'root'と指定する。",
          "type": "string"
        },
        "file_name": {
          "description": "コピー後のドキュメントのファイル名 ※NULLの場合はコピー元のファイル名をそのまま使用する",
          "type": "string"
        }
      }
    },
    "foldersPostRequest": {
      "type": "object",
      "required": [
        "parent_folder_id",
        "folder_name"
      ],
      "properties": {
        "parent_folder_id": {
          "description": "作成先のフォルダーID ※ルートフォルダーは'root'と指定する",
          "type": "string"
        },
        "folder_name": {
          "description": "作成するフォルダー名",
          "type": "string"
        }
      }
    },
    "foldersFolderIdPutRequest": {
      "type": "object",
      "properties": {
        "parent_folder_id": {
          "description": "移動先のフォルダーID ※NULLの場合は変更しない。ルートフォルダーは'root'と指定する。",
          "type": "string"
        },
        "folder_name": {
          "description": "ドキュメントのファイル名 ※NULLの場合は変更しない",
          "type": "string"
        }
      }
    },
    "viewerStatusPresetMarksGetResult": {
      "type": "object",
      "required": [
        "pattern_list"
      ],
      "properties": {
        "pattern_list": {
          "description": "プリセットのパターンリスト。ゼロ件の場合はsizeゼロのリストを返却。",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonPresetMarkObjectResult"
          }
        }
      }
    },
    "commonPresetMarkObjectResult": {
      "type": "object",
      "required": [
        "pattern"
      ],
      "properties": {
        "pattern": {
          "description": "プリセットのパターン文字列",
          "type": "string"
        }
      }
    },
    "viewerConfigsNoteTemplateGetResult": {
      "type": "object",
      "required": [
        "template_list"
      ],
      "properties": {
        "template_list": {
          "description": "ノートテンプレート情報のリスト。デフォルトノートテンプレートも含む。",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonTemplateObjectResult"
          }
        }
      }
    },
    "commonTemplateObjectResult": {
      "type": "object",
      "required": [
        "note_template_id",
        "template_name",
        "created_date",
        "is_modifiable"
      ],
      "properties": {
        "note_template_id": {
          "description": "ノートテンプレートID",
          "type": "string"
        },
        "template_name": {
          "description": "ノートテンプレート名",
          "type": "string"
        },
        "created_date": {
          "description": "ノートテンプレート作成日時(ISO8601 フォーマット)",
          "type": "string"
        },
        "is_modifiable": {
          "description": "ノートテンプレート編集可否 可:'true',不可:'false'",
          "type": "string"
        }
      }
    },
    "viewerConfigsNoteTemplatePostRequest": {
      "type": "object",
      "required": [
        "template_name"
      ],
      "properties": {
        "template_name": {
          "description": "作成するノートテンプレート名",
          "type": "string"
        }
      }
    },
    "viewerConfigsNoteTemplatePostResult": {
      "type": "object",
      "required": [
        "note_template_id"
      ],
      "properties": {
        "note_template_id": {
          "description": "作成されたノートテンプレートのID",
          "type": "string"
        }
      }
    },
    "viewerConfigsNoteTemplateTemplateIdPutRequest": {
      "type": "object",
      "properties": {
        "template_name": {
          "description": "変更後のノートテンプレート名 ※NULLの場合は変更しない",
          "type": "string"
        }
      }
    },
    "viewerControlsOpenPutRequest": {
      "type": "object",
      "required": [
        "document_id"
      ],
      "properties": {
        "document_id": {
          "description": "開く対象のドキュメントのID",
          "type": "string"
        }
      }
    },
    "documentsDocumentIdDeleteRequest": {
      "type": "object",
      "properties": {
        "target_revision": {
          "description": "削除対象のリビジョン。クライアント側で把握した最新のリビジョンを指定する。クライアント側で把握した以降にDeneb内でドキュメントが更新され、管理するリビジョンの値が指定されたtarget_revisionと異なる状態になっている場合にはエラーを返却する。指定無しの場合は、当該リビジョンチェックを行わない。",
          "type": "string"
        }
      }
    },
    "foldersFolderIdDeleteRequest": {
      "type": "object",
      "properties": {
        "force_delete_flag": {
          "description": "削除対象フォルダー配下にエントリーが存在した場合、強制的に削除するかを指定するフラグ。'true'：強制的に削除する、'false'：配下にエントリーが存在したら削除しない。指定無しの場合、デフォルト'true'として扱う。",
          "type": "string"
        }
      }
    },
    "configsListResult": {
      "type": "object",
      "properties": {
        "timezone": {
          "description": "タイムゾーン設定値",
          "$ref": "#/definitions/commonValueObject"
        },
        "date_format": {
          "description": "日付の表示形式",
          "$ref": "#/definitions/commonValueObject"
        },
        "time_format": {
          "description": "時刻の表示形式",
          "$ref": "#/definitions/commonValueObject"
        },
        "initialized_flag": {
          "description": "初期化済なら 'initialized' 初期化していない場合は 'none'",
          "$ref": "#/definitions/commonValueObject"
        },
        "timeout_to_standby": {
          "description": "設定時間(分単位)、スリープに入らない時は 'never'",
          "$ref": "#/definitions/commonValueObject"
        },
        "owner": {
          "description": "設定されている所有者名(JSONエスケープ)",
          "$ref": "#/definitions/commonValueObject"
        }
      }
    },
    "statusStorageResult": {
      "type": "object",
      "required": [
        "capacity",
        "available"
      ],
      "properties": {
        "capacity": {
          "description": "ストレージの最大容量 (byte単位)",
          "type": "string"
        },
        "available": {
          "description": "ストレージの空き容量 (byte 単位)",
          "type": "string"
        }
      }
    },
    "updateFirmwarePrecheckResult": {
      "type": "object",
      "required": [
        "image_file",
        "battery"
      ],
      "properties": {
        "image_file": {
          "description": "ファームウェアのイメージファイルが転送済みなら'ok', まだなら'ng'",
          "type": "string"
        },
        "battery": {
          "description": "電池残量がファームウェアアップデートするのに十分なら'ok', 不足なら'ng'",
          "type": "string"
        }
      }
    },
    "statusFirmwareVersionResult": {
      "type": "object",
      "required": [
        "value",
        "model_name"
      ],
      "properties": {
        "value": {
          "description": "ファームウェアバージョン番号",
          "type": "string"
        },
        "model_name": {
          "description": "モデル名",
          "type": "string"
        }
      }
    },
    "apConfigureListObject": {
      "type": "object",
      "required": [
        "aplist"
      ],
      "properties": {
        "aplist": {
          "description": "登録済みアクセスポイントのリスト",
          "type": "array",
          "items": {
            "$ref": "#/definitions/apConfigureObject"
          }
        }
      }
    },
    "apConfigureObject": {
      "type": "object",
      "required": [
        "ssid",
        "security",
        "dhcp",
        "proxy"
      ],
      "properties": {
        "ssid": {
          "description": "SSID encoded with BASE64, character code is UTF-8",
          "type": "string"
        },
        "security": {
          "description": "Encryption ['nonsec'/'psk'/'eap']",
          "type": "string"
        },
        "passwd": {
          "description": "access point access password",
          "type": "string"
        },
        "dhcp": {
          "description": "true 'when using DHCP,' false 'if not used",
          "type": "string"
        },
        "static_address": {
          "description": "IP address specification, DHCP not used",
          "type": "string"
        },
        "gateway": {
          "description": "Gateway address specification, DHCP unused",
          "type": "string"
        },
        "network_mask": {
          "description": "Specifying network prefix length (0 - 32), DHCP unused",
          "type": "string"
        },
        "dns1": {
          "description": "Primary DNS address, DHCP not used",
          "type": "string"
        },
        "dns2": {
          "description": "Secondary DNS address (empty character if not specified), DHCP not used",
          "type": "string"
        },
        "proxy": {
          "description": "true 'when using proxy,' false 'if not used",
          "type": "string"
        },
        "proxy_host": {
          "description": "address of proxy, when using proxy",
          "type": "string"
        },
        "proxy_port": {
          "description": "Port of proxy, when using proxy",
          "type": "string"
        },
        "eap": {
          "description": "EAP method specification ['peap' / 'tls']",
          "type": "string"
        },
        "eap_phase2": {
          "description": "Specifying the EAP phase 2 authentication method ['none' / 'gtc' / 'pap' / 'mschap' / 'mschapv 2']",
          "type": "string"
        },
        "eap_id": {
          "description": "EAP login ID",
          "type": "string"
        },
        "eap_anid": {
          "description": "EAP 匿名ID",
          "type": "string"
        },
        "eap_cacert": {
          "description": "EAP CA certificate name",
          "type": "string"
        },
        "eap_cert": {
          "description": "EAP クライアント証明書名",
          "type": "string"
        }
      }
    },
    "caCertificatesFileObject": {
      "type": "object",
      "required": [
        "file",
        "filename"
      ],
      "properties": {
        "file": {
          "description": "証明書ファイルの中身を base64 encode したもの",
          "type": "string"
        },
        "filename": {
          "description": "証明書の元ファイル名",
          "type": "string"
        },
        "name": {
          "description": "証明書につける名前",
          "type": "string"
        }
      }
    },
    "clientCertificatesFileObject": {
      "type": "object",
      "required": [
        "file",
        "filename",
        "password"
      ],
      "properties": {
        "file": {
          "description": "証明書ファイルの中身を base64 encode したもの",
          "type": "string"
        },
        "filename": {
          "description": "証明書の元ファイル名",
          "type": "string"
        },
        "name": {
          "description": "証明書につける名前",
          "type": "string"
        },
        "password": {
          "description": "証明書のパスワード",
          "type": "string"
        }
      }
    },
    "commonRegisterObject": {
      "type": "object",
      "properties": {
        "a": {
          "type": "string",
          "description": "別紙 'クライアント登録用WebAPI補足.pptx' 参照"
        },
        "b": {
          "type": "string",
          "description": "別紙 'クライアント登録用WebAPI補足.pptx' 参照"
        },
        "c": {
          "type": "string",
          "description": "別紙 'クライアント登録用WebAPI補足.pptx' 参照"
        },
        "d": {
          "type": "string",
          "description": "別紙 'クライアント登録用WebAPI補足.pptx' 参照"
        },
        "e": {
          "type": "string",
          "description": "別紙 'クライアント登録用WebAPI補足.pptx' 参照"
        }
      }
    },
    "deviceInformationResult": {
      "type": "object",
      "required": [
        "serial_number",
        "sku_code",
        "device_color",
        "model_name"
      ],
      "properties": {
        "serial_number": {
          "description": "シリアル番号",
          "type": "string"
        },
        "sku_code": {
          "description": "仕向け (ソニー社内で規定された識別規格仕様コード)",
          "type": "string"
        },
        "device_color": {
          "description": "筐体色 (カラーコード表現 #rrggbb)",
          "type": "string"
        },
        "model_name": {
          "description": "モデル名",
          "type": "string"
        }
      }
    },
    "authPutRequest": {
      "type": "object",
      "required": [
        "client_id",
        "nonce_signed"
      ],
      "properties": {
        "client_id": {
          "type": "string",
          "description": "クライアントの識別子"
        },
        "nonce_signed": {
          "type": "string",
          "description": "Nonce (ワンタイムトークン)の電子署名結果をBase64エンコードしたもの"
        }
      }
    },
    "specialAuthPutRequest": {
      "type": "object",
      "required": [
        "nonce_signed"
      ],
      "properties": {
        "nonce_signed": {
          "type": "string",
          "description": "Nonce (ワンタイムトークン)の電子署名結果をBase64エンコードしたもの"
        }
      }
    },
    "extensionsStatusGetResult": {
      "type": "object",
      "properties": {
        "item1": {
          "description": "状態項目1",
          "$ref": "#/definitions/commonValueObject"
        },
        "item2": {
          "description": "状態項目2",
          "$ref": "#/definitions/commonValueObject"
        }
      }
    },
    "extensionConfigsGetResult": {
      "type": "object",
      "properties": {
        "item1": {
          "description": "設定項目1",
          "$ref": "#/definitions/commonValueObject"
        },
        "item2": {
          "description": "設定項目2",
          "$ref": "#/definitions/commonValueObject"
        }
      }
    },
    "commonDocumentIdObject2": {
      "type": "object",
      "required": [
        "document_id"
      ],
      "properties": {
        "document_id": {
          "description": "ドキュメントID",
          "type": "string"
        }
      }
    },
    "commonFolderIdObject2": {
      "type": "object",
      "required": [
        "folder_id"
      ],
      "properties": {
        "folder_id": {
          "description": "フォルダーID",
          "type": "string"
        }
      }
    },
    "commonEntryListObjectResult2": {
      "type": "object",
      "required": [
        "count",
        "entry_list_hash",
        "entry_list"
      ],
      "properties": {
        "count": {
          "description": "検索条件に合致する結果の全件数。（entry_listの件数とは必ずしも一致しない。）",
          "type": "integer"
        },
        "entry_list_hash": {
          "description": "検索条件に合致する結果リストのハッシュ値。取得対象のフォルダー配下のリストに関する更新有無のチェックに使用可能。",
          "type": "string"
        },
        "entry_list": {
          "description": "指定条件に基づいて取得されたエントリーのリスト。ゼロ件の場合はsizeゼロのリストを返却。",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonEntryObjectResult2"
          }
        }
      }
    },
    "commonEntryObjectResult2": {
      "type": "object",
      "required": [
        "entry_id",
        "entry_name",
        "entry_path",
        "entry_type",
        "created_date",
        "is_new",
        "document_source",
        "ext_id"
      ],
      "properties": {
        "entry_id": {
          "description": "端末側で発行したドキュメント/フォルダーのID<br>\n※ルートフォルダーの場合は'root'という値で返却",
          "type": "string"
        },
        "entry_name": {
          "description": "Entry name (Filename / Folder name)",
          "type": "string"
        },
        "entry_path": {
          "description": "エントリーのフルパス ※ルートフォルダーは'Document/'と表現される",
          "type": "string"
        },
        "entry_type": {
          "description": "Type of entry item (file: 'document', folder: 'folder')",
          "type": "string"
        },
        "created_date": {
          "description": "エントリー作成日時(ISO8601 フォーマット)",
          "type": "string"
        },
        "modified_date": {
          "description": "エントリー更新日時(ISO8601 フォーマット) ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "mime_type": {
          "description": "ファイルのMimeType ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "file_size": {
          "description": "ファイルサイズ(単位：byte) ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "document_type": {
          "description": "ドキュメント種別（通常ドキュメント:'normal', ノート:'note'）※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "author": {
          "description": "ドキュメントの著者名 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "title": {
          "description": "ドキュメントのタイトル ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "total_page": {
          "description": "ドキュメントのページ数 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "current_page": {
          "description": "ドキュメントの直近で開かれていたページ番号 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "reading_date": {
          "description": "ドキュメントの最終閲覧日時(ISO8601 フォーマット) ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "parent_folder_id": {
          "description": "このエントリーが格納されているフォルダーのID<br>\n※ルートフォルダーの場合は'root'<br>\n※ルートフォルダーの親は存在しないので、その場合はnull",
          "type": "string"
        },
        "is_new": {
          "description": "エントリーが新規に追加されたものか 新規:'true',新規でない:'false'",
          "type": "string"
        },
        "document_source": {
          "description": "このエントリーを作成したクライアントの識別子 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "ext_id": {
          "description": "外部ID",
          "type": "string"
        },
        "file_hash": {
          "description": "ドキュメントのファイルハッシュ（クライアント側で計算されたもの）。 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        },
        "file_revision": {
          "description": "ドキュメントのリビジョン（Deneb側で計算されたもの）。 ※entry_typeがフォルダーの場合はnull",
          "type": "string"
        }
      }
    },
    "documentsPostRequest2": {
      "type": "object",
      "required": [
        "parent_folder_id",
        "file_name"
      ],
      "properties": {
        "parent_folder_id": {
          "description": "作成先のフォルダーID ※ルートフォルダーは'root'と指定する",
          "type": "string"
        },
        "file_name": {
          "description": "作成するドキュメントのファイル名",
          "type": "string"
        },
        "ext_id": {
          "description": "外部ID",
          "type": "string"
        }
      }
    },
    "documentsDocumentIdPutRequest2": {
      "type": "object",
      "properties": {
        "parent_folder_id": {
          "description": "変更後の親フォルダーのID ※NULLの場合は変更しない。ルートフォルダーは'root'と指定する。",
          "type": "string"
        },
        "file_name": {
          "description": "変更後のドキュメントのファイル名 ※NULLの場合は変更しない",
          "type": "string"
        },
        "ext_id": {
          "description": "変更後の外部ID ※NULLの場合は変更しない",
          "type": "string"
        }
      }
    },
    "foldersPostRequest2": {
      "type": "object",
      "required": [
        "parent_folder_id",
        "folder_name"
      ],
      "properties": {
        "parent_folder_id": {
          "description": "作成先のフォルダーID ※ルートフォルダーは'root'と指定する",
          "type": "string"
        },
        "folder_name": {
          "description": "作成するフォルダー名",
          "type": "string"
        },
        "ext_id": {
          "description": "外部ID",
          "type": "string"
        }
      }
    },
    "foldersFolderIdPutRequest2": {
      "type": "object",
      "properties": {
        "parent_folder_id": {
          "description": "移動先のフォルダーID ※NULLの場合は変更しない。ルートフォルダーは'root'と指定する。",
          "type": "string"
        },
        "folder_name": {
          "description": "ドキュメントのファイル名 ※NULLの場合は変更しない",
          "type": "string"
        },
        "ext_id": {
          "description": "変更後の外部ID ※NULLの場合は変更しない",
          "type": "string"
        }
      }
    },
    "viewerStatusCurrentViewingGetResult2": {
      "type": "object",
      "required": [
        "views"
      ],
      "properties": {
        "orientation": {
          "description": "画面の向き ['portlait'/'landscape']",
          "type": "string"
        },
        "view_mode": {
          "description": "表示モード ['single'/'double']",
          "type": "string"
        },
        "views": {
          "description": "各表示面情報のリスト",
          "type": "array",
          "items": {
            "$ref": "#/definitions/viewerStatusViewInfo2"
          }
        }
      }
    },
    "viewerStatusViewInfo2": {
      "type": "object",
      "required": [
        "entry_id",
        "entry_path",
        "total_page",
        "current_page",
        "document_source",
        "ext_id",
        "display_mode"
      ],
      "properties": {
        "entry_id": {
          "description": "ドキュメントのID",
          "type": "string"
        },
        "entry_path": {
          "description": "ドキュメントのフルパス ※ルートフォルダーは'Document/'と表現される",
          "type": "string"
        },
        "title": {
          "description": "ドキュメントのタイトル",
          "type": "string"
        },
        "total_page": {
          "description": "ドキュメントのページ数(整数値)",
          "type": "string"
        },
        "current_page": {
          "description": "ドキュメントの直近で開かれていたページ番号(整数値)",
          "type": "string"
        },
        "document_source": {
          "description": "このエントリーを作成したクライアントの識別子",
          "type": "string"
        },
        "ext_id": {
          "description": "外部ID",
          "type": "string"
        },
        "position": {
          "description": "画面内の表示位置 ['left'/'right'] ※表示モードが'single'の場合はNULL",
          "type": "string"
        },
        "display_mode": {
          "description": "ページ描画モード [単ページ:'single' / 見開き:'two_page_spread' / 俯瞰:'thumbnail']",
          "type": "string"
        },
        "thumbnail_current_page": {
          "description": "ページ描画モードに応じた基準のページ番号(整数値)",
          "type": "string"
        }
      }
    },
    "viewerControlsOpenPutRequest2": {
      "type": "object",
      "required": [
        "document_id"
      ],
      "properties": {
        "document_id": {
          "description": "開く対象のドキュメントのID",
          "type": "string"
        },
        "page": {
          "description": "開くページ番号(整数値)",
          "type": "string"
        }
      }
    },
    "statusBatteryResult2": {
      "type": "object",
      "required": [
        "level",
        "icon_type",
        "Settings - status",
        "health",
        "plugged",
        "pen"
      ],
      "properties": {
        "level": {
          "description": "バッテリー残量パーセンテージ (0～100)",
          "type": "string"
        },
        "icon_type": {
          "description": "バッテリーアイコンの種類 ['level_bar_0'/'level_bar_1'/'level_bar_2'/'level_bar_3'/'level_bar_4'/'charging'/'full']",
          "type": "string"
        },
        "Settings - status": {
          "description": "バッテリー状態 [充電中:'charging'/放電中:'discharging'/満タン:'full'/充電中でない:'not_charging'/不明:'unknown']",
          "type": "string"
        },
        "health": {
          "description": "バッテリーの健全性 [正常:'good'/過冷却:'cold'/過熱:'overheat'/過電圧:'over_voltage'/上がっている:'dead'/不明:'unknown'/予期せぬ状況:'unspecified_failure'",
          "type": "string"
        },
        "plugged": {
          "description": "電源供給手段 [ACアダプタ:'ac'/USB:'usb'/無線:'wireless'/なし:'not_plugged'",
          "type": "string"
        },
        "pen": {
          "description": "付属ペンのバッテリー残量パーセンテージ (0～100)",
          "type": "string"
        }
      }
    },
    "indicationInfoObject2": {
      "type": "object",
      "required": [
        "dialog_params"
      ],
      "properties": {
        "dialog_params": {
          "description": "ダイアログ各種パラメーター",
          "$ref": "#/definitions/dialogParametersObject"
        },
        "show_animation": {
          "description": "Show an animation. To enable: 'true', to disable:'false' (by default: 'false')",
          "type": "string"
        }
      }
    },
    "dialogParametersObject": {
      "type": "object",
      "required": [
        "title",
        "message",
        "button_caption"
      ],
      "properties": {
        "title": {
          "description": "ダイアログタイトル",
          "type": "string"
        },
        "message": {
          "description": "ダイアログに表示するメッセージ",
          "type": "string"
        },
        "button_caption": {
          "description": "非表示にするためのボタンの文字列",
          "type": "string"
        }
      }
    },
    "twoButtonsDialogParametersObject": {
      "type": "object",
      "required": [
        "title",
        "message",
        "positive_button_caption",
        "negative_button_caption"
      ],
      "properties": {
        "title": {
          "description": "ダイアログタイトル",
          "type": "string"
        },
        "message": {
          "description": "ダイアログに表示するメッセージ",
          "type": "string"
        },
        "positive_button_caption": {
          "description": "肯定的なリアクションをするためのボタンの文字列",
          "type": "string"
        },
        "negative_button_caption": {
          "description": "否定的なリアクションをするためのボタンの文字列",
          "type": "string"
        }
      }
    },
    "documentAttributeObject2": {
      "type": "object",
      "properties": {
        "action_entry": {
          "description": "アクション項目情報のリスト",
          "type": "array",
          "items": {
            "$ref": "#/definitions/actionEntryObject2"
          }
        },
        "action_performer": {
          "description": "アクション実行情報のリスト",
          "type": "array",
          "items": {
            "$ref": "#/definitions/actionPerformerObject2"
          }
        }
      }
    },
    "actionEntryObject2": {
      "type": "object",
      "required": [
        "index",
        "by_user"
      ],
      "properties": {
        "index": {
          "description": "インデックス(整数値) ※項目表示順序に影響",
          "type": "string"
        },
        "by_user": {
          "description": "ユーザーが選択できるアクションの設定項目",
          "$ref": "#/definitions/actionEntryByUserObject2"
        },
        "performers": {
          "description": "アクション項目に対応するアクション実行情報のインデックスのリスト",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "actionEntryByUserObject2": {
      "type": "object",
      "required": [
        "caption"
      ],
      "properties": {
        "caption": {
          "description": "アクション一覧に表示する文字列",
          "type": "string"
        },
        "confirm_dialog_params": {
          "description": "アクション実行時に表示する確認ダイアログの各種パラメーター (省略時は確認を行わない)",
          "$ref": "#/definitions/twoButtonsDialogParametersObject"
        }
      }
    },
    "actionPerformerObject2": {
      "type": "object",
      "required": [
        "index"
      ],
      "properties": {
        "index": {
          "description": "インデックス(整数値)",
          "type": "string"
        },
        "request": {
          "description": "HTTPリクエストを投げる場合の設定項目",
          "$ref": "#/definitions/actionPerformerRequestObject2"
        },
        "indicate": {
          "description": "各種通知用ダイアログを表示する場合の設定項目",
          "$ref": "#/definitions/actionPerformerIndicateObject2"
        },
        "result": {
          "description": "一連のアクションの成功や失敗を通知する場合の設定項目",
          "$ref": "#/definitions/actionPerformerResultObject2"
        }
      }
    },
    "actionPerformerRequestObject2": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "description": "HTTPリクエストを投げるURL",
          "type": "string"
        },
        "restrict": {
          "description": "HTTPリクエストを投げている間、ユーザーの操作を制限するか  制限する:'true', 制限しない:'false' (省略時'false')",
          "type": "string"
        }
      }
    },
    "actionPerformerIndicateObject2": {
      "type": "object",
      "required": [
        "dialog_params"
      ],
      "properties": {
        "dialog_params": {
          "description": "ダイアログの各種パラメーター",
          "$ref": "#/definitions/dialogParametersObject"
        },
        "indication_id": {
          "description": "ダイアログの識別子 (UUID 形式)",
          "type": "string"
        },
        "show_animation": {
          "description": "処理中アニメーションを表示するか 表示する:'true', 表示しない:'false' (省略時'false')",
          "type": "string"
        }
      }
    },
    "actionPerformerResultObject2": {
      "type": "object",
      "properties": {
        "success_dialog_params": {
          "description": "一連のアクション実行が成功した際に表示するダイアログの各種パラメーター<br>省略時は成功してもダイアログを表示しない",
          "$ref": "#/definitions/dialogParametersObject"
        },
        "failure_dialog_params": {
          "description": "一連のアクション実行のどれかが失敗した際に表示するダイアログの各種パラメーター<br>省略時は失敗してもダイアログを表示しない",
          "$ref": "#/definitions/dialogParametersObject"
        }
      }
    },
    "kittingRegisterCodeRequest": {
      "type": "object",
      "required": [
        "host",
        "register_code"
      ],
      "properties": {
        "host": {
          "description": "DCSS の ホスト名 もしくは IPアドレス",
          "type": "string"
        },
        "port": {
          "description": "DCSS の Web API に HTTP アクセスするポート番号 (省略時80)",
          "type": "string"
        },
        "register_code": {
          "description": "DCSS 登録シーケンスで参照される登録コード",
          "type": "string"
        }
      }
    }
  }
}
