configurations {
    jarjar
    proguard
}
dependencies {
    compile project(':dex-tools')
    jarjar 'com.googlecode.jarjar:jarjar:1.3'
    proguard 'net.sf.proguard:proguard-base:5.2.1'
}
task allinone(type: Jar, dependsOn: jar) {
    archiveName = 'all-in-one.jar'
    def deps = configurations.runtime
    def depClasses = { deps.collect { it.isDirectory() ? it : zipTree(it) } }
    from(depClasses) {
        exclude 'META-INF/**'
    }
    from(sourceSets.main.output)
    manifest {
        attributes 'Main-Class': 'com.googlecode.dex2jar.tools.Dex2jarCmd'
        attributes("Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Build-Time": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Revision":"${getRevision()}",
                "Build-Number": System.env.BUILD_NUMBER?System.env.BUILD_NUMBER:"-1",
        )
    }
}

task j6version(type: JavaExec, dependsOn: allinone) {
    classpath sourceSets.main.runtimeClasspath
    main='com.googlecode.dex2jar.tools.ClassVersionSwitch'
    args=["6","$allinone.destinationDir/$allinone.archiveName", "$allinone.destinationDir/j6.jar"]
}

task j6weave(type: JavaExec, dependsOn: j6version) {
    classpath sourceSets.main.runtimeClasspath
    main='com.googlecode.dex2jar.tools.JarWeaverCmd'
    args=["-c", "$projectDir/j6-weave.txt", "$allinone.destinationDir/j6.jar", "-o", "$allinone.destinationDir/weaved.jar"]
}

task j6jarjar(type: JavaExec, dependsOn: j6weave) {
    classpath configurations.jarjar
    main='com.tonicsystems.jarjar.Main'
    args=["process", "$projectDir/jarjar-rules.txt", "$allinone.destinationDir/weaved.jar", "$projectDir/build/dex2jar-for-jdk6.jar"]
}

task j6proguard(type: JavaExec, dependsOn: j6jarjar) {
    classpath=configurations.proguard
    main='proguard.ProGuard'
    args=['-injars', "$projectDir/build/dex2jar-for-jdk6.jar" , '-outjars',"$projectDir/build/dex2jar-for-jdk6-obfuscated.jar", "-printmapping", "$projectDir/build/dex2jar-for-jdk6-mapping.txt", "@$projectDir/proguard.txt"]
}

task jdk6 {
    dependsOn j6jarjar
    dependsOn j6proguard
}